"""
2. Для списка реализовать обмен значений соседних элементов, т.е.
Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
При нечетном количестве элементов последний сохранить на своем месте.
Для заполнения списка элементов необходимо использовать функцию input().
"""

# data = []
# print("[!] Чтобы закончить ввод данных, нажмите Enter без ввода данных.")
# while True:
#     el = input("Добавьте элемент в список: ")
#     if el:
#         data.append(el)
#     else:
#         break
data = ['10', '21', 'a', 'b', '30', '44', 'c', 'd', '55']
print(data)

# Вариант 1 ++
# (очень быстро, не смотря на доп.операцию с послед.эл-ом)
# Если в списке нечетное кол-во эл-в, последний сохраняем и убираем из списка
if len(data) % 2:
    last_el = data.pop()

# меняем элементы списка местами, используя два среза - один с начала списка, другой с отступом в 1 элемент и оба
# с шагом 2, чтобы брать пары элементов без повторов
data[::2], data[1::2] = data[1::2], data[::2]

# пытаемся добавить в список ещё один элемент, используя try-except
try:
    data.append(last_el)
except NameError as e:
    pass

# print(data)


# Вариант 2 +
# (с увеличением длины списка скорость выполнения уменьшается в разы, по сравнению с предыдущим)
n = 0
for pair in zip(data[::2], data[1::2]):
    data[n], data[n + 1] = data[n + 1], data[n]
    n += 2
print(data)

